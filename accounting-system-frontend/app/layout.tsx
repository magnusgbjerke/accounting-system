"use client";

import type { Metadata } from "next";
import "./globals.css";
import { ThemeProvider } from "@/components/theme-provider";
import {
  SidebarProvider,
  SidebarInset,
  SidebarTrigger,
} from "@/components/ui/sidebar";
import { Separator } from "@/components/ui/separator";
import { ModeToggle } from "@/components/mode-toggle";
import { DownloadButton } from "@/components/download-button";
import { Toaster } from "@/components/ui/sonner";
import AppSidebar from "@/components/sidebar/AppSidebar";
import { useDataTableStore } from "@/components/data-table/stores/DataTableStore";
import { ExcelDownload } from "@/components/data-table/excel-download";
import { usePathname } from "next/navigation";

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const metadata: Metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
  };

  const { allOrSomeRowsSelected, currentSelectedVouchers } =
    useDataTableStore();

  const [firstSlash, module, taskPage] = usePathname().toString().split("/");

  const pathName = (taskpage?: string) => {
    switch (taskpage) {
      case "voucherRegistration": {
        return "Bokf√∏ring";
      }
      case "voucherRegistry": {
        return "Hovedbok";
      }
      default: {
        break;
      }
    }
  };

  return (
    <>
      <html lang="en" suppressHydrationWarning>
        <head>
          <title>{`${pathName(taskPage)} | Regnskap`}</title>
          <link rel="icon" href="/favicon.ico" />
        </head>
        <body>
          <ThemeProvider
            attribute="class"
            defaultTheme="system"
            enableSystem
            disableTransitionOnChange
          >
            <Toaster
              position="top-center"
              className="ml-36"
              toastOptions={{
                unstyled: false,

                classNames: {
                  error: "bg-red-400",
                  success: "text-green-400",
                  warning: "text-yellow-400",
                  info: "bg-blue-400",
                },
              }}
            />
            <SidebarProvider>
              <AppSidebar />
              <SidebarInset>
                <header className="flex h-16 shrink-0 items-center gap-2 border-b px-4">
                  <SidebarTrigger className="-ml-2" />
                  {usePathname() === "/accounting/voucherRegistry" ? (
                    <>
                      <Separator orientation="vertical" className="h-4" />
                      <DownloadButton
                        onClickDownloadRows={() =>
                          ExcelDownload(currentSelectedVouchers)
                        }
                        className={`-ml-0 ${
                          allOrSomeRowsSelected
                            ? "bg-secondary bg-opacity-50 p-1"
                            : ""
                        }`}
                      />
                    </>
                  ) : (
                    ""
                  )}
                  <div className="ml-auto flex items-center gap-2">
                    <ModeToggle className="-ml-0" />
                  </div>
                </header>
                {children}
              </SidebarInset>
            </SidebarProvider>
          </ThemeProvider>
        </body>
      </html>
    </>
  );
}
